[{"/home/jorge/ctd/ctd_final_project_frontend/src/index.js":"1","/home/jorge/ctd/ctd_final_project_frontend/src/components/contexts/ConnectionContext.js":"2","/home/jorge/ctd/ctd_final_project_frontend/src/components/App.js":"3","/home/jorge/ctd/ctd_final_project_frontend/src/components/contexts/JourneyContext.js":"4","/home/jorge/ctd/ctd_final_project_frontend/src/components/contexts/ViewportContext.js":"5","/home/jorge/ctd/ctd_final_project_frontend/src/components/requestPage/RequestPage.js":"6","/home/jorge/ctd/ctd_final_project_frontend/src/components/landing/LandingPage.js":"7","/home/jorge/ctd/ctd_final_project_frontend/src/components/connection/Connection.js":"8","/home/jorge/ctd/ctd_final_project_frontend/src/utils/constants/routes.js":"9","/home/jorge/ctd/ctd_final_project_frontend/src/components/requestPage/orderForm/OrderForm.js":"10","/home/jorge/ctd/ctd_final_project_frontend/src/components/rideForm/RideForm.js":"11","/home/jorge/ctd/ctd_final_project_frontend/src/components/landing/styles/styles.js":"12","/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/Navbar.js":"13","/home/jorge/ctd/ctd_final_project_frontend/src/components/map/Map.js":"14","/home/jorge/ctd/ctd_final_project_frontend/src/utils/constants/constants.js":"15","/home/jorge/ctd/ctd_final_project_frontend/src/utils/calcMidpoint.js":"16","/home/jorge/ctd/ctd_final_project_frontend/src/components/requestPage/orderForm/styles/styles.js":"17","/home/jorge/ctd/ctd_final_project_frontend/src/components/rideForm/searchBar/SearchBar.js":"18","/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/styles/styles.js":"19","/home/jorge/ctd/ctd_final_project_frontend/src/components/directions/Directions.js":"20"},{"size":957,"mtime":1611095594365,"results":"21","hashOfConfig":"22"},{"size":501,"mtime":1611095959563,"results":"23","hashOfConfig":"22"},{"size":1131,"mtime":1611095934741,"results":"24","hashOfConfig":"22"},{"size":1465,"mtime":1611096227802,"results":"25","hashOfConfig":"22"},{"size":424,"mtime":1611095594365,"results":"26","hashOfConfig":"22"},{"size":1042,"mtime":1611095878942,"results":"27","hashOfConfig":"22"},{"size":829,"mtime":1611095594365,"results":"28","hashOfConfig":"22"},{"size":2514,"mtime":1611096319400,"results":"29","hashOfConfig":"22"},{"size":106,"mtime":1611095594369,"results":"30","hashOfConfig":"22"},{"size":1700,"mtime":1611095594365,"results":"31","hashOfConfig":"22"},{"size":1567,"mtime":1611095594365,"results":"32","hashOfConfig":"22"},{"size":149,"mtime":1611095594365,"results":"33","hashOfConfig":"22"},{"size":1455,"mtime":1610660129277,"results":"34","hashOfConfig":"22"},{"size":7735,"mtime":1611096182226,"results":"35","hashOfConfig":"22"},{"size":345,"mtime":1611095594365,"results":"36","hashOfConfig":"22"},{"size":649,"mtime":1611095594365,"results":"37","hashOfConfig":"22"},{"size":152,"mtime":1611095594365,"results":"38","hashOfConfig":"22"},{"size":4329,"mtime":1611095594365,"results":"39","hashOfConfig":"22"},{"size":1266,"mtime":1610660129277,"results":"40","hashOfConfig":"22"},{"size":764,"mtime":1611095594365,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"7hy45m",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"45"},"/home/jorge/ctd/ctd_final_project_frontend/src/index.js",["94","95"],"import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport actionCable from 'actioncable';\n\nimport App from './components/App';\nimport { ConnectionStore } from './components/contexts/ConnectionContext';\n\n// const CableApp = {}\n\n// CableApp.cable = actionCable.createConsumer('ws://localhost:3000/cable')\n\n// export const ActionCableContext = createContext()\n\n// ReactDOM.render(<ActionCableContext.Provider value={CableApp.cable}><App /></ActionCableContext.Provider>, document.getElementById(\"root\"));\n\n// import ActionCable from 'actioncable';\n// import ActionCableProvider from 'react-actioncable-provider';\n\n// const cable = ActionCable.createConsumer('ws://localhost:3000/cable');\n\n// ReactDOM.render(<ActionCableProvider cable={cable}><App /></ActionCableProvider>, document.getElementById(\"root\"));\n\nReactDOM.render(<ConnectionStore><App /></ConnectionStore>, document.getElementById(\"root\"));\n",["96","97"],"/home/jorge/ctd/ctd_final_project_frontend/src/components/contexts/ConnectionContext.js",["98"],"import React, { useState, useEffect } from 'react';\nimport actionCable from 'actioncable';\n\nconst Context = React.createContext();\n\nexport const ConnectionStore = ({ children }) => {\n  const [connection, setConnection] = useState(null);\n  \n  const CableApp = {}\n  CableApp.cable = actionCable.createConsumer('ws://localhost:3000/cable');\n\n  return (\n    <Context.Provider\n      value={[CableApp, connection, setConnection]}\n    >\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport default Context;","/home/jorge/ctd/ctd_final_project_frontend/src/components/App.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/contexts/JourneyContext.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/contexts/ViewportContext.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/requestPage/RequestPage.js",["99","100","101","102","103"],"import React, { useContext, useEffect } from 'react';\n\nimport JourneyContext from '../contexts/JourneyContext';\nimport ViewportContext from '../contexts/ViewportContext';\nimport ConnectionContext from '../contexts/ConnectionContext';\nimport Map from '../map/Map';\nimport OrderForm from './orderForm/OrderForm';\n\nconst RequestPage = () => {\n  const [CableApp, connection, setConnection] = useContext(ConnectionContext);\n  const [journey, dispatchJourney] = useContext(JourneyContext);\n  const [viewport, setViewport] = useContext(ViewportContext);\n\n  useEffect(() => {\n    setViewport(prevState => {\n      return { ...prevState, ...{ width: '100vw', height: '100vh' } };\n    })\n  }, [])\n\n  useEffect(() => {\n    if (connection) connection.send({id: 1, body: journey.start})\n  }, [])\n\n  console.log(journey)\n\n  return (\n    <>\n      <div style={{ position: 'relative' }}>\n        <Map width={'100vw'} height={'100vh'} viewport={viewport} setViewport={setViewport} />\n        <OrderForm />\n      </div>\n    </>\n  )\n}\n\nexport default RequestPage;","/home/jorge/ctd/ctd_final_project_frontend/src/components/landing/LandingPage.js",["104"],"import React, { useContext } from 'react';\nimport { Row, Col } from 'antd';\n\nimport ViewportContext from '../contexts/ViewportContext';\nimport Navbar from '../navbar/Navbar';\nimport RideForm from '../rideForm/RideForm';\nimport Map from '../map/Map';\nimport { StyledDiv } from './styles/styles';\n\nconst LandingPage = ({ history }) => {\n    const [viewport, setViewport] = useContext(ViewportContext);\n\n    return (\n        <>\n            <Navbar />\n            <Row justify=\"center\">\n                <Col span={8}>\n                    <RideForm history={history} viewport={viewport} setViewport={setViewport} />\n                </Col>\n                <Col span={8}>\n                    <Map viewport={viewport} setViewport={setViewport} />\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default LandingPage;","/home/jorge/ctd/ctd_final_project_frontend/src/components/connection/Connection.js",["105","106","107","108","109","110"],"import React, { useState, useEffect, useContext } from 'react';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nimport ConnectionContext from '../contexts/ConnectionContext';\nimport JourneyContext from '../contexts/JourneyContext';\n\nconst Connection = () => {\n  const [CableApp, connection, setConnection] = useContext(ConnectionContext);\n  const [journey, dispatchJourney] = useContext(JourneyContext);\n\n\n  useEffect(() => {\n    let room;\n    if (CableApp) {\n      room = CableApp.cable.subscriptions.create({ channel: \"RoomChannel\", id: 1 }, {\n        connected() {\n          console.log(\"we're connected\")\n        },\n        disconnected() {\n          console.log(\"we're disconnected\")\n        },\n        received(data) {\n          console.log(data)\n          dispatchJourney({\n            type: \"directions\",\n            payload: { field: \"drivers\", value: data},\n          });\n        }\n      })\n    }\n    setConnection(room);\n  }, [])\n\n\n\n  return (null)\n}\n\nexport default Connection;\n\n// import { ActionCableContext } from '../../index'\n\n\n// const Connection = ({ cableApp }) => {\n//   // const cable = useContext(ActionCableContext)\n//   const [channel, setChannel] = useState(null)\n\n//   const handleConnected = (message) => {\n//     console.log('connected')\n//   }\n\n//   const handleReceived = (message) => {\n//     console.log(message)\n//   }\n\n//   return (\n//     <ActionCableConsumer\n//         channel={{channel: \"RoomChannel\", user: {id: 5}}}\n//         onConnected={handleConnected}\n//         onReceived={handleReceived}\n//       >\n//     <div>\n//       {}\n//     </div>\n//     </ActionCableConsumer>\n//   )\n\n  // useEffect(() => {\n  //   console.log(cable)\n  //   const channel = cable.subscriptions.create({\n  //     channel: \"RoomChannel\",\n  //     id: 4\n  //   });\n  //   console.log(channel)\n  //   setChannel(channel)\n  //   return () => {\n  //     channel.unsubscribe()\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   console.log(cableApp)\n  //   cableApp.room = cableApp.cable.subscriptions.create(\n  //   {\n  //     channel: \"RoomChannel\",\n  //     id: 4\n  //   },\n  //   {\n  //     connected() {\n  //       console.log(\"we're connected\")\n  //   }},\n  //   {\n  //     disconnected() {\n  //       console.log(\"we're disconnected\")\n  //   }},\n  //   {\n  //     received(data) {\n  //       console.log('hello')\n  //       console.log(data)\n  //     }\n  //   })\n  // }, [])\n\n  // return (\n  //   <div>\n  //     {}\n  //   </div>\n  // )\n// }\n\n// export default Connection;","/home/jorge/ctd/ctd_final_project_frontend/src/utils/constants/routes.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/requestPage/orderForm/OrderForm.js",["111","112","113","114","115","116","117","118","119"],"import React, { useContext, useEffect, useState } from 'react';\nimport { AutoComplete, Card } from 'antd';\nimport { CaretDownOutlined } from '@ant-design/icons';\n\nimport JourneyContext from '../../contexts/JourneyContext';\nimport { StyledP } from './styles/styles';\n\nconst mockVal = (str, repeat = 1) => {\n  return {\n    value: str.repeat(repeat),\n  };\n};\n\nconst OrderForm = () => {\n  const [journey, dispatchJourney] = useContext(JourneyContext);\n  const [values, setValues] = useState('');\n  const [editAddress, setEditAddress] = useState('');\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState([]);\n\n  const onSearch = (searchText) => {\n    setOptions(\n      !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\n    );\n  };\n\n  const onSelect = (data) => {\n    console.log('onSelect', data);\n  };\n\n  const onChange = (data) => {\n    setValue(data);\n  };\n\n  useEffect(() => {\n    if (journey.start && journey.end) {\n      setValues({ start: journey.start.value.split(',')[0], end: journey.end.value.split(',')[0] })\n    }\n  }, [journey])\n\n  const onClick = (value) => {\n    console.log({ [value]: values[value] })\n    setValues(prevState => {\n      return { ...prevState, ...{ [value]: values[value] } }\n    })\n  }\n\n  const title = () => {\n    return (\n      <>\n        <StyledP onClick={() => onClick('start')}>From {values.start} <CaretDownOutlined /></StyledP>\n        <StyledP onClick={() => onClick('end')}>To {values.end} <CaretDownOutlined /></StyledP>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <Card title={title()} style={{ width: 300, position: 'absolute' }}>\n\n\n\n      </Card>\n    </>\n  )\n}\n\nexport default OrderForm;","/home/jorge/ctd/ctd_final_project_frontend/src/components/rideForm/RideForm.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/landing/styles/styles.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/Navbar.js",["120","121"],"import React, { useState } from 'react';\nimport { Menu } from 'antd';\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\n\nimport { StyledNavbar } from './styles/styles';\n\nconst { SubMenu } = Menu;\n\nconst Navbar = () => {\n  const [state, setState] = useState({\n    current: 'landing',\n  })\n  const { current } = state;\n\n  const handleClick = e => {\n    console.log('click ', e);\n    setState({ current: e.key });\n  };\n\n  return (\n    <StyledNavbar>\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{\n        borderBottom: \"none\"\n      }}>\n        <Menu.Item id=\"icon\" key=\"landing\">\n          RideShare\n        </Menu.Item>\n      </Menu>\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{\n        borderBottom: \"none\"\n      }}>\n        <Menu.Item className=\"menuItem\" key=\"about\">\n          About\n        </Menu.Item>\n        <SubMenu className=\"menuItem\" key=\"SubMenu\" title=\"Navigation Three - Submenu\">\n          <Menu.ItemGroup title=\"Item 1\">\n            <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n            <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n          </Menu.ItemGroup>\n          <Menu.ItemGroup title=\"Item 2\">\n            <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n            <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n          </Menu.ItemGroup>\n        </SubMenu>\n      </Menu >\n    </StyledNavbar>\n  );\n}\n\nexport default Navbar;","/home/jorge/ctd/ctd_final_project_frontend/src/components/map/Map.js",["122","123","124","125","126","127","128","129","130"],"import React, { useState, useContext, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport { CarOutlined } from '@ant-design/icons';\nimport { ActionCable } from 'react-actioncable-provider';\nimport _ from 'lodash';\n\n// import { listLogEntries } from './API';\nimport { MAPBOX_DIRECTIONS_URL, MAPBOX_DIRECTIONS_PARAMS } from '../../utils/constants/constants';\nimport calcMidpoint from '../../utils/calcMidpoint';\nimport JourneyContext from '../contexts/JourneyContext';\nimport Directions from '../directions/Directions';\n\nconst Map = ({ viewport, setViewport, width, height }) => {\n    const [journey, dispatchJourney] = useContext(JourneyContext);\n    const [locations, setLocations] = useState([]);\n    const [currentLocation, setCurrentLocation] = useState(null);\n\n    useEffect(() => {\n        setViewport(prevState => {\n            return { ...prevState, width, height };\n        })\n    }, [])\n\n    // useEffect(() => {\n    //     const getLocations = async () => {\n    //         const values = await listLogEntries();\n    //         console.log(values)\n    //         setLocations(values)\n    //     }\n    //     getLocations();\n    // }, [])\n\n    // useEffect(() => {\n    //     navigator.geolocation.watchPosition(data => {\n    //         console.log(data)\n    //         setCurrentLocation(prevState => {\n    //             if (prevState) {\n    //                 return [...prevState, { lat: data.coords.latitude, lon: data.coords.longitude }]\n    //             }\n    //             return [{ lat: data.coords.latitude, lon: data.coords.longitude }]\n    //         })\n    //     }, error => console.log(error), { enableHighAccuracy: true })\n    // }, [])\n\n\n    useEffect(() => {\n        const getDirections = async () => {\n            let zoom;\n            const url = encodeURI(`${journey.start.longitude},${journey.start.latitude};${journey.end.longitude},${journey.end.latitude}`);\n            const data = await fetch(`${MAPBOX_DIRECTIONS_URL}/${url}${MAPBOX_DIRECTIONS_PARAMS}${process.env.REACT_APP_MAPBOX_TOKEN}`)\n            const res = await data.json();\n            const distance = res.routes[0].distance * 0.00062;\n            dispatchJourney({\n                type: \"directions\",\n                payload: { field: \"directions\", value: res },\n            });\n            const midPoint = {\n                ...calcMidpoint(journey.start.latitude, journey.start.longitude, journey.end.latitude, journey.end.longitude)\n            }\n\n            if (distance > 20) {\n                zoom = 8;\n            } else {\n                zoom = 11.5\n            }\n            setViewport(prevState => {\n                return { ...prevState, ...midPoint, zoom }\n            })\n        }\n\n\n        if ((journey.hasOwnProperty('start') && journey.start) && (journey.hasOwnProperty('end') && journey.end)) {\n            getDirections();\n        }\n    }, [journey.start, journey.end])\n\n    console.log(journey)\n\n    // const handleConnected = (message) => {\n    //     console.log('connected')\n    // }\n\n    // const handleReceived = (message) => {\n    //     console.log(message)\n    // }\n\n    const renderMarkers = () => {\n        let address;\n        return Object.keys(journey).map((key) => {\n            if ((key === 'start' && journey.start) || (key === 'end' && journey.end)) {\n                address = journey[key].value.split(',');\n            }\n            return (\n                <>\n                    {\n                        (key === 'start' && journey.start) || (key === 'end' && journey.end) ?\n                            <React.Fragment key={journey[key].id}>\n                                <Marker\n                                    key={`${journey[key].id}_marker`}\n                                    latitude={journey[key].latitude}\n                                    longitude={journey[key].longitude}\n                                    offsetLeft={-10}\n                                    offsetTop={-25}\n                                >\n                                    <svg style={{ width: `24px`, height: `24px` }} viewBox=\"0 0 24 24\" stroke=\"black\" strokeWidth=\"2\" fill={key === 'start' ? 'green' : 'red'} strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle></svg>\n                                </Marker>\n                                <Popup\n                                    key={`${journey[key].id}_popup`}\n                                    latitude={journey[key].latitude}\n                                    longitude={journey[key].longitude}\n                                    closeButton={false}\n                                    offsetTop={0}\n                                    offsetLeft={0}\n                                    // style={{ width: `calc(1vmin*${viewport.zoom})`, height: `calc(1vmin*${viewport.zoom})` }}\n                                    anchor=\"top\" >\n                                    <div><strong>{address[0]}</strong></div>\n                                </Popup>\n                            </React.Fragment>\n                            : null\n                    }\n                </>\n            )\n        })\n    }\n\n\n    const renderDirections = () => {\n        if (journey.directions.hasOwnProperty('message')) {\n            return (\n                <div>\n                    {journey.directions.message}\n                </div>\n            )\n        }\n        const { directions: { routes: [{ geometry: { coordinates } }] } } = journey;\n        return (\n            <Directions points={[[journey.start.longitude, journey.start.latitude], ...coordinates, [journey.end.longitude, journey.end.latitude]]} />\n        )\n    }\n\n    const renderDrivers = () => {\n        return journey.drivers.map((driver) => {\n            return (\n                <>\n                    <Marker\n                        key={`${driver.id}_marker`}\n                        latitude={driver.latitude}\n                        longitude={driver.longitude}\n                        offsetLeft={-10}\n                        offsetTop={-25}\n                    >\n                        <svg width=\"36px\" height=\"36px\" viewBox=\"0 0 24 24\"><path d=\"M3 18v-5a2 2 0 0 1 2-2V8a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v3a2 2 0 0 1 2 2v5a2 2 0 1 1-4 0H7a2 2 0 1 1-4 0zM9 6a2 2 0 0 0-2 2v3h10V8a2 2 0 0 0-2-2H9zm-3 9a1 1 0 1 0 0-2a1 1 0 0 0 0 2zm12 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2z\" fill=\"black\" /><rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" fill=\"rgba(0, 0, 0, 0)\" /></svg>\n                    </Marker>\n                </>\n            )\n        })\n    }\n\n    return (\n        <>\n            {\n                journey.start || journey.end ?\n                    <ReactMapGL\n                        {...viewport}\n                        style={{ position: 'absolute' }}\n                        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                        onViewportChange={nextViewport => setViewport(nextViewport)}\n                    >\n                        <div style={{ position: 'absolute', right: 0 }}>\n                            <NavigationControl />\n                        </div>\n                        {\n                            journey.directions ? renderDirections() : null\n                        }\n                        {\n                            journey.drivers ? renderDrivers() : null\n                        }\n                        {\n                            renderMarkers()\n                        }\n                    </ReactMapGL>\n                    : null\n            }\n        </>\n    );\n}\n\nexport default Map;","/home/jorge/ctd/ctd_final_project_frontend/src/utils/constants/constants.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/utils/calcMidpoint.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/requestPage/orderForm/styles/styles.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/rideForm/searchBar/SearchBar.js",["131","132"],"import React, { useState, useContext } from 'react';\nimport { AutoComplete, Form, Input, Button } from 'antd';\nimport { FlyToInterpolator } from 'react-map-gl';\nimport { CloseOutlined } from '@ant-design/icons';\nimport _ from 'lodash';\nimport { easeCubic } from 'd3-ease';\n\nimport { MAPBOX_SEARCH_PARAMS, MAPBOX_GEOCODING_URL } from '../../../utils/constants/constants';\nimport JourneyContext from '../../contexts/JourneyContext';\n\nconst suffix = (\n  <CloseOutlined\n    style={{\n      fontSize: 16,\n      color: '#1890ff',\n    }}\n  />\n);\n\nconst SearchBar = ({ viewport, setViewport }) => {\n  const [journey, dispatchJourney] = useContext(JourneyContext);\n  const [values, setValues] = useState([]);\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState([]);\n\n  const onSearch = async (searchText) => {\n    let cities;\n    if (searchText) {\n      const res = await fetch(`${MAPBOX_GEOCODING_URL}/${searchText}${MAPBOX_SEARCH_PARAMS}${process.env.REACT_APP_MAPBOX_TOKEN}`)\n      const { features } = await res.json();\n      cities = features.reduce((acc, curr) => [...acc, { id: curr.id, value: curr.place_name, longitude: curr.center[0], latitude: curr.center[1] }], [])\n\n      setValues(cities);\n    }\n\n    setOptions(\n      !searchText ? [] : [...cities]\n    );\n  };\n\n  const onStartSelect = (data) => {\n    const start = values.find(city => data === city.value)\n    dispatchJourney({\n      type: \"start\",\n      payload: { field: \"start\", value: start },\n    });\n    setOptions(null);\n    setViewport({\n      width: 400,\n      height: 400,\n      latitude: start.latitude,\n      longitude: start.longitude,\n      transitionDuration: 5000,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic,\n      zoom: 13\n    })\n  };\n\n  const onEndSelect = (data) => {\n    const end = values.find(city => data === city.value)\n    dispatchJourney({\n      type: \"end\",\n      payload: { field: \"end\", value: end },\n    });\n    setOptions(null);\n    setViewport({\n      width: 400,\n      height: 400,\n      latitude: end.latitude,\n      longitude: end.longitude,\n      transitionDuration: 5000,\n      transitionInterpolator: new FlyToInterpolator(),\n      transitionEasing: easeCubic,\n      zoom: 13\n    })\n  };\n\n  const onChangeStart = (data) => {\n    setValue(prevState => {\n      return { ...prevState, start: data };\n    });\n  };\n\n  const onChangeEnd = (data) => {\n    setValue(prevState => {\n      return { ...prevState, end: data };\n    });\n  };\n\n  const clearInput = (e) => {\n    if (e === 'start') {\n      dispatchJourney({ type: \"start\", payload: { field: \"start\", value: null } })\n      setValue(prevState => {\n        console.log(prevState)\n        return { ...prevState, start: \"\" };\n      });\n    } else {\n      dispatchJourney({ type: \"end\", payload: { field: \"end\", value: null } })\n      setValue(prevState => {\n        console.log(prevState)\n        return { ...prevState, end: \"\" };\n      });\n    }\n\n  }\n\n  return (\n    <>\n      <Form.Item>\n        <AutoComplete\n          value={value.start}\n          options={options}\n          style={{\n            width: 200,\n          }}\n          onSelect={onStartSelect}\n          onSearch={_.debounce(onSearch, 500)}\n          onChange={onChangeStart}\n          placeholder=\"Enter a pickup location\"\n          filterOption={(inputValue, option) =>\n            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n        >\n          <Input id=\"start\" suffix={<Button style={{ color: 'black' }} type=\"link\" onClick={() => clearInput('start')}><CloseOutlined /></Button>} />\n        </AutoComplete>\n      </Form.Item>\n      <Form.Item>\n        <AutoComplete\n          value={value.end}\n          options={options}\n          style={{\n            width: 200,\n          }}\n          onSelect={onEndSelect}\n          onSearch={_.debounce(onSearch, 500)}\n          onChange={onChangeEnd}\n          placeholder=\"Enter destination\"\n          filterOption={(inputValue, option) =>\n            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n          }\n        >\n          <Input suffix={<Button style={{ color: 'black' }} type=\"link\" onClick={() => clearInput('end')}><CloseOutlined /></Button>} />\n        </AutoComplete>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default SearchBar;",["133","134"],"/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/styles/styles.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/directions/Directions.js",["135"],"import React, { PureComponent } from \"react\";\nimport { CanvasOverlay } from \"react-map-gl\";\n\nconst Directions = ({ points }) => {\n\n  const redraw = ({ width, height, ctx, isDragging, project, unproject }) => {\n    const color = \"black\",\n      lineWidth = 3,\n      renderWhileDragging = true;\n    ctx.clearRect(0, 0, width, height);\n    ctx.globalCompositeOperation = \"lighter\";\n\n    if ((renderWhileDragging || !isDragging) && points) {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      points.forEach(point => {\n        const pixel = project([point[0], point[1]]);\n        ctx.lineTo(pixel[0], pixel[1]);\n      });\n      ctx.stroke();\n    }\n  }\n\n  return <CanvasOverlay redraw={redraw} />;\n}\n\nexport default Directions;\n",{"ruleId":"136","severity":1,"message":"137","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":30},{"ruleId":"136","severity":1,"message":"140","line":4,"column":8,"nodeType":"138","messageId":"139","endLine":4,"endColumn":19},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"136","severity":1,"message":"145","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"136","severity":1,"message":"146","line":10,"column":10,"nodeType":"138","messageId":"139","endLine":10,"endColumn":18},{"ruleId":"136","severity":1,"message":"147","line":10,"column":32,"nodeType":"138","messageId":"139","endLine":10,"endColumn":45},{"ruleId":"136","severity":1,"message":"148","line":11,"column":19,"nodeType":"138","messageId":"139","endLine":11,"endColumn":34},{"ruleId":"149","severity":1,"message":"150","line":18,"column":6,"nodeType":"151","endLine":18,"endColumn":8,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":22,"column":6,"nodeType":"151","endLine":22,"endColumn":8,"suggestions":"154"},{"ruleId":"136","severity":1,"message":"155","line":8,"column":10,"nodeType":"138","messageId":"139","endLine":8,"endColumn":19},{"ruleId":"136","severity":1,"message":"156","line":1,"column":8,"nodeType":"138","messageId":"139","endLine":1,"endColumn":13},{"ruleId":"136","severity":1,"message":"157","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"158","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":29},{"ruleId":"136","severity":1,"message":"159","line":8,"column":20,"nodeType":"138","messageId":"139","endLine":8,"endColumn":30},{"ruleId":"136","severity":1,"message":"160","line":9,"column":10,"nodeType":"138","messageId":"139","endLine":9,"endColumn":17},{"ruleId":"149","severity":1,"message":"161","line":32,"column":6,"nodeType":"151","endLine":32,"endColumn":8,"suggestions":"162"},{"ruleId":"136","severity":1,"message":"163","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":22},{"ruleId":"136","severity":1,"message":"148","line":15,"column":19,"nodeType":"138","messageId":"139","endLine":15,"endColumn":34},{"ruleId":"136","severity":1,"message":"164","line":17,"column":10,"nodeType":"138","messageId":"139","endLine":17,"endColumn":21},{"ruleId":"136","severity":1,"message":"165","line":17,"column":23,"nodeType":"138","messageId":"139","endLine":17,"endColumn":37},{"ruleId":"136","severity":1,"message":"166","line":18,"column":10,"nodeType":"138","messageId":"139","endLine":18,"endColumn":15},{"ruleId":"136","severity":1,"message":"167","line":19,"column":10,"nodeType":"138","messageId":"139","endLine":19,"endColumn":17},{"ruleId":"136","severity":1,"message":"168","line":21,"column":9,"nodeType":"138","messageId":"139","endLine":21,"endColumn":17},{"ruleId":"136","severity":1,"message":"169","line":27,"column":9,"nodeType":"138","messageId":"139","endLine":27,"endColumn":17},{"ruleId":"136","severity":1,"message":"170","line":31,"column":9,"nodeType":"138","messageId":"139","endLine":31,"endColumn":17},{"ruleId":"136","severity":1,"message":"171","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":22},{"ruleId":"136","severity":1,"message":"172","line":3,"column":24,"nodeType":"138","messageId":"139","endLine":3,"endColumn":39},{"ruleId":"136","severity":1,"message":"173","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"136","severity":1,"message":"174","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":21},{"ruleId":"136","severity":1,"message":"175","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":9},{"ruleId":"136","severity":1,"message":"176","line":15,"column":12,"nodeType":"138","messageId":"139","endLine":15,"endColumn":21},{"ruleId":"136","severity":1,"message":"177","line":15,"column":23,"nodeType":"138","messageId":"139","endLine":15,"endColumn":35},{"ruleId":"136","severity":1,"message":"178","line":16,"column":12,"nodeType":"138","messageId":"139","endLine":16,"endColumn":27},{"ruleId":"136","severity":1,"message":"179","line":16,"column":29,"nodeType":"138","messageId":"139","endLine":16,"endColumn":47},{"ruleId":"149","severity":1,"message":"180","line":22,"column":8,"nodeType":"151","endLine":22,"endColumn":10,"suggestions":"181"},{"ruleId":"149","severity":1,"message":"182","line":75,"column":8,"nodeType":"151","endLine":75,"endColumn":36,"suggestions":"183"},{"ruleId":"136","severity":1,"message":"184","line":11,"column":7,"nodeType":"138","messageId":"139","endLine":11,"endColumn":13},{"ruleId":"136","severity":1,"message":"160","line":21,"column":10,"nodeType":"138","messageId":"139","endLine":21,"endColumn":17},{"ruleId":"141","replacedBy":"185"},{"ruleId":"143","replacedBy":"186"},{"ruleId":"136","severity":1,"message":"187","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":30},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'actionCable' is defined but never used.","no-native-reassign",["188"],"no-negated-in-lhs",["189"],"'useEffect' is defined but never used.","'CableApp' is assigned a value but never used.","'setConnection' is assigned a value but never used.","'dispatchJourney' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setViewport'. Either include it or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has missing dependencies: 'connection' and 'journey.start'. Either include them or remove the dependency array.",["191"],"'StyledDiv' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'ActionCableConsumer' is defined but never used.","'connection' is assigned a value but never used.","'journey' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'CableApp', 'dispatchJourney', and 'setConnection'. Either include them or remove the dependency array.",["192"],"'AutoComplete' is defined but never used.","'editAddress' is assigned a value but never used.","'setEditAddress' is assigned a value but never used.","'value' is assigned a value but never used.","'options' is assigned a value but never used.","'onSearch' is assigned a value but never used.","'onSelect' is assigned a value but never used.","'onChange' is assigned a value but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'CarOutlined' is defined but never used.","'ActionCable' is defined but never used.","'_' is defined but never used.","'locations' is assigned a value but never used.","'setLocations' is assigned a value but never used.","'currentLocation' is assigned a value but never used.","'setCurrentLocation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'height', 'setViewport', and 'width'. Either include them or remove the dependency array. If 'setViewport' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["193"],"React Hook useEffect has missing dependencies: 'dispatchJourney', 'journey', and 'setViewport'. Either include them or remove the dependency array. If 'setViewport' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["194"],"'suffix' is assigned a value but never used.",["188"],["189"],"'PureComponent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [setViewport]",{"range":"205","text":"206"},"Update the dependencies array to be: [connection, journey.start]",{"range":"207","text":"208"},"Update the dependencies array to be: [CableApp, dispatchJourney, setConnection]",{"range":"209","text":"210"},"Update the dependencies array to be: [height, setViewport, width]",{"range":"211","text":"212"},"Update the dependencies array to be: [journey.start, journey.end, journey, dispatchJourney, setViewport]",{"range":"213","text":"214"},[682,684],"[setViewport]",[778,780],"[connection, journey.start]",[956,958],"[CableApp, dispatchJourney, setConnection]",[950,952],"[height, setViewport, width]",[2919,2947],"[journey.start, journey.end, journey, dispatchJourney, setViewport]"]