[{"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\index.js":"1","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\App.js":"2","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\navbar\\Navbar.js":"3","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\landing\\LandingPage.js":"4","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\connection\\Connection.js":"5","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\navbar\\styles\\styles.js":"6","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\map\\Map.js":"7","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\rideForm\\RideForm.js":"8","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\landing\\styles\\styles.js":"9","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\rideForm\\searchBar\\SearchBar.js":"10","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\utils\\constants\\constants.js":"11","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\contexts\\JourneyContext.js":"12","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\directions\\Directions.js":"13","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\utils\\constants\\routes.js":"14","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\contexts\\ViewportContext.js":"15","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\utils\\calcMidpoint.js":"16","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\requestPage\\RequestPage.js":"17","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\requestPage\\orderForm\\OrderForm.js":"18","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\requestPage\\orderForm\\styles\\styles.js":"19","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\contexts\\ConnectionContext.js":"20"},{"size":957,"mtime":1611071061035,"results":"21","hashOfConfig":"22"},{"size":977,"mtime":1610987895998,"results":"23","hashOfConfig":"22"},{"size":1504,"mtime":1610394823572,"results":"24","hashOfConfig":"22"},{"size":829,"mtime":1610937862537,"results":"25","hashOfConfig":"22"},{"size":2262,"mtime":1611071041455,"results":"26","hashOfConfig":"22"},{"size":1310,"mtime":1610395044867,"results":"27","hashOfConfig":"22"},{"size":7734,"mtime":1611094667734,"results":"28","hashOfConfig":"22"},{"size":1647,"mtime":1610987325964,"results":"29","hashOfConfig":"22"},{"size":156,"mtime":1610750154173,"results":"30","hashOfConfig":"22"},{"size":4478,"mtime":1610993068523,"results":"31","hashOfConfig":"22"},{"size":348,"mtime":1610931834737,"results":"32","hashOfConfig":"22"},{"size":1369,"mtime":1610926710048,"results":"33","hashOfConfig":"22"},{"size":792,"mtime":1610845204228,"results":"34","hashOfConfig":"22"},{"size":108,"mtime":1610932897576,"results":"35","hashOfConfig":"22"},{"size":446,"mtime":1610937685794,"results":"36","hashOfConfig":"22"},{"size":666,"mtime":1610939184259,"results":"37","hashOfConfig":"22"},{"size":807,"mtime":1610991188345,"results":"38","hashOfConfig":"22"},{"size":1767,"mtime":1610997666048,"results":"39","hashOfConfig":"22"},{"size":161,"mtime":1610994680719,"results":"40","hashOfConfig":"22"},{"size":517,"mtime":1611068538683,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"1xyhapl",{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"45"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"45"},"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\index.js",["95","96"],"import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport actionCable from 'actioncable';\n\nimport App from './components/App';\nimport { ConnectionStore } from './components/contexts/ConnectionContext';\n\n// const CableApp = {}\n\n// CableApp.cable = actionCable.createConsumer('ws://localhost:3000/cable')\n\n// export const ActionCableContext = createContext()\n\n// ReactDOM.render(<ActionCableContext.Provider value={CableApp.cable}><App /></ActionCableContext.Provider>, document.getElementById(\"root\"));\n\n// import ActionCable from 'actioncable';\n// import ActionCableProvider from 'react-actioncable-provider';\n\n// const cable = ActionCable.createConsumer('ws://localhost:3000/cable');\n\n// ReactDOM.render(<ActionCableProvider cable={cable}><App /></ActionCableProvider>, document.getElementById(\"root\"));\n\nReactDOM.render(<ConnectionStore><App /></ConnectionStore>, document.getElementById(\"root\"));\n",["97","98"],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\App.js",["99"],"import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nimport * as ROUTES from '../utils/constants/routes';\nimport RequestPage from './requestPage/RequestPage';\nimport LandingPage from './landing/LandingPage';\nimport Connection from './connection/Connection';\nimport { JourneyStore } from './contexts/JourneyContext';\nimport { ViewportStore } from './contexts/ViewportContext';\n\nconst App = ({ cableApp }) => {\n  return (\n    <BrowserRouter>\n      <ViewportStore>\n        <JourneyStore>\n          <Switch>\n            <Route exact path={ROUTES.LANDING_PAGE} component={LandingPage} />\n            <Route exact path={ROUTES.REQUEST_PAGE} component={RequestPage} />\n            {/* <Route path={ROUTES.HOME_PAGE} component={} /> */}\n            {/* <Connection cableApp={cableApp} /> */}\n          </Switch>\n        </JourneyStore>\n      </ViewportStore>\n    </BrowserRouter>\n  )\n}\n\nexport default App;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\navbar\\Navbar.js",["100","101"],"import React, { useState } from 'react';\r\nimport { Menu } from 'antd';\r\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\r\n\r\nimport { StyledNavbar } from './styles/styles';\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nconst Navbar = () => {\r\n  const [state, setState] = useState({\r\n    current: 'landing',\r\n  })\r\n  const { current } = state;\r\n\r\n  const handleClick = e => {\r\n    console.log('click ', e);\r\n    setState({ current: e.key });\r\n  };\r\n\r\n  return (\r\n    <StyledNavbar>\r\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{\r\n        borderBottom: \"none\"\r\n      }}>\r\n        <Menu.Item id=\"icon\" key=\"landing\">\r\n          RideShare\r\n        </Menu.Item>\r\n      </Menu>\r\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{\r\n        borderBottom: \"none\"\r\n      }}>\r\n        <Menu.Item className=\"menuItem\" key=\"about\">\r\n          About\r\n        </Menu.Item>\r\n        <SubMenu className=\"menuItem\" key=\"SubMenu\" title=\"Navigation Three - Submenu\">\r\n          <Menu.ItemGroup title=\"Item 1\">\r\n            <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n            <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n          </Menu.ItemGroup>\r\n          <Menu.ItemGroup title=\"Item 2\">\r\n            <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\r\n            <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu >\r\n    </StyledNavbar>\r\n  );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\landing\\LandingPage.js",["102"],"import React, { useContext } from 'react';\nimport { Row, Col } from 'antd';\n\nimport ViewportContext from '../contexts/ViewportContext';\nimport Navbar from '../navbar/Navbar';\nimport RideForm from '../rideForm/RideForm';\nimport Map from '../map/Map';\nimport { StyledDiv } from './styles/styles';\n\nconst LandingPage = ({ history }) => {\n    const [viewport, setViewport] = useContext(ViewportContext);\n\n    return (\n        <>\n            <Navbar />\n            <Row justify=\"center\">\n                <Col span={8}>\n                    <RideForm history={history} viewport={viewport} setViewport={setViewport} />\n                </Col>\n                <Col span={8}>\n                    <Map viewport={viewport} setViewport={setViewport} />\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default LandingPage;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\connection\\Connection.js",["103","104","105","106","107"],"import React, { useState, useEffect, useContext } from 'react';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\nimport ConnectionContext from '../contexts/ConnectionContext';\n\nconst Connection = () => {\n  const [CableApp, connection, setConnection] = useContext(ConnectionContext);\n\n  useEffect(() => {\n    let room;\n    if (CableApp) {\n      room = CableApp.cable.subscriptions.create({ channel: \"RoomChannel\", id: 1 }, {\n        connected() {\n          console.log(\"we're connected\")\n        },\n        disconnected() {\n          console.log(\"we're disconnected\")\n        },\n        received(data) {\n          console.log(data)\n        }\n      })\n    }\n    setConnection(room);\n  }, [])\n\n\n\n  return (null)\n}\n\nexport default Connection;\n\n// import { ActionCableContext } from '../../index'\n\n\n// const Connection = ({ cableApp }) => {\n//   // const cable = useContext(ActionCableContext)\n//   const [channel, setChannel] = useState(null)\n\n//   const handleConnected = (message) => {\n//     console.log('connected')\n//   }\n\n//   const handleReceived = (message) => {\n//     console.log(message)\n//   }\n\n//   return (\n//     <ActionCableConsumer\n//         channel={{channel: \"RoomChannel\", user: {id: 5}}}\n//         onConnected={handleConnected}\n//         onReceived={handleReceived}\n//       >\n//     <div>\n//       {}\n//     </div>\n//     </ActionCableConsumer>\n//   )\n\n  // useEffect(() => {\n  //   console.log(cable)\n  //   const channel = cable.subscriptions.create({\n  //     channel: \"RoomChannel\",\n  //     id: 4\n  //   });\n  //   console.log(channel)\n  //   setChannel(channel)\n  //   return () => {\n  //     channel.unsubscribe()\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   console.log(cableApp)\n  //   cableApp.room = cableApp.cable.subscriptions.create(\n  //   {\n  //     channel: \"RoomChannel\",\n  //     id: 4\n  //   },\n  //   {\n  //     connected() {\n  //       console.log(\"we're connected\")\n  //   }},\n  //   {\n  //     disconnected() {\n  //       console.log(\"we're disconnected\")\n  //   }},\n  //   {\n  //     received(data) {\n  //       console.log('hello')\n  //       console.log(data)\n  //     }\n  //   })\n  // }, [])\n\n  // return (\n  //   <div>\n  //     {}\n  //   </div>\n  // )\n// }\n\n// export default Connection;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\navbar\\styles\\styles.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\map\\Map.js",["108","109","110","111","112","113","114","115","116"],"import React, { useState, useContext, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup, NavigationControl } from 'react-map-gl';\nimport { CarOutlined } from '@ant-design/icons';\nimport { ActionCable } from 'react-actioncable-provider';\nimport _ from 'lodash';\n\n// import { listLogEntries } from './API';\nimport { MAPBOX_DIRECTIONS_URL, MAPBOX_DIRECTIONS_PARAMS } from '../../utils/constants/constants';\nimport calcMidpoint from '../../utils/calcMidpoint';\nimport JourneyContext from '../contexts/JourneyContext';\nimport Directions from '../directions/Directions';\n\nconst Map = ({ viewport, setViewport, width, height }) => {\n    const [journey, dispatchJourney] = useContext(JourneyContext);\n    const [locations, setLocations] = useState([]);\n    const [currentLocation, setCurrentLocation] = useState(null);\n\n    useEffect(() => {\n        setViewport(prevState => {\n            return { ...prevState, width, height };\n        })\n    }, [])\n\n    // useEffect(() => {\n    //     const getLocations = async () => {\n    //         const values = await listLogEntries();\n    //         console.log(values)\n    //         setLocations(values)\n    //     }\n    //     getLocations();\n    // }, [])\n\n    // useEffect(() => {\n    //     navigator.geolocation.watchPosition(data => {\n    //         console.log(data)\n    //         setCurrentLocation(prevState => {\n    //             if (prevState) {\n    //                 return [...prevState, { lat: data.coords.latitude, lon: data.coords.longitude }]\n    //             }\n    //             return [{ lat: data.coords.latitude, lon: data.coords.longitude }]\n    //         })\n    //     }, error => console.log(error), { enableHighAccuracy: true })\n    // }, [])\n\n\n    useEffect(() => {\n        const getDirections = async () => {\n            let zoom;\n            const url = encodeURI(`${journey.start.longitude},${journey.start.latitude};${journey.end.longitude},${journey.end.latitude}`);\n            const data = await fetch(`${MAPBOX_DIRECTIONS_URL}/${url}${MAPBOX_DIRECTIONS_PARAMS}${process.env.REACT_APP_MAPBOX_TOKEN}`)\n            const res = await data.json();\n            const distance = res.routes[0].distance * 0.00062;\n            dispatchJourney({\n                type: \"directions\",\n                payload: { field: \"directions\", value: res },\n            });\n            const midPoint = {\n                ...calcMidpoint(journey.start.latitude, journey.start.longitude, journey.end.latitude, journey.end.longitude)\n            }\n\n            if (distance > 20) {\n                zoom = 8;\n            } else {\n                zoom = 11.5\n            }\n            setViewport(prevState => {\n                return { ...prevState, ...midPoint, zoom }\n            })\n        }\n\n\n        if ((journey.hasOwnProperty('start') && journey.start) && (journey.hasOwnProperty('end') && journey.end)) {\n            getDirections();\n        }\n    }, [journey.start, journey.end])\n\n    console.log(journey)\n\n    // const handleConnected = (message) => {\n    //     console.log('connected')\n    // }\n\n    // const handleReceived = (message) => {\n    //     console.log(message)\n    // }\n\n    const renderMarkers = () => {\n        let address;\n        return Object.keys(journey).map((key) => {\n            if ((key === 'start' && journey.start) || (key === 'end' && journey.end)) {\n                address = journey[key].value.split(',');\n            }\n            return (\n                <>\n                    {\n                        (key === 'start' && journey.start) || (key === 'end' && journey.end) ?\n                            <React.Fragment key={journey[key].id}>\n                                <Marker\n                                    key={`${journey[key].id}_marker`}\n                                    latitude={journey[key].latitude}\n                                    longitude={journey[key].longitude}\n                                    offsetLeft={-10}\n                                    offsetTop={-25}\n                                >\n                                    <svg style={{ width: `24px`, height: `24px` }} viewBox=\"0 0 24 24\" stroke=\"black\" strokeWidth=\"2\" fill={key === 'start' ? 'green' : 'red'} strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\"></path><circle cx=\"12\" cy=\"10\" r=\"3\"></circle></svg>\n                                </Marker>\n                                <Popup\n                                    key={`${journey[key].id}_popup`}\n                                    latitude={journey[key].latitude}\n                                    longitude={journey[key].longitude}\n                                    closeButton={false}\n                                    offsetTop={0}\n                                    offsetLeft={0}\n                                    // style={{ width: `calc(1vmin*${viewport.zoom})`, height: `calc(1vmin*${viewport.zoom})` }}\n                                    anchor=\"top\" >\n                                    <div><strong>{address[0]}</strong></div>\n                                </Popup>\n                            </React.Fragment>\n                            : null\n                    }\n                </>\n            )\n        })\n    }\n\n\n    const renderDirections = () => {\n        if (journey.directions.hasOwnProperty('message')) {\n            return (\n                <div>\n                    {journey.directions.message}\n                </div>\n            )\n        }\n        const { directions: { routes: [{ geometry: { coordinates } }] } } = journey;\n        return (\n            <Directions points={[[journey.start.longitude, journey.start.latitude], ...coordinates, [journey.end.longitude, journey.end.latitude]]} />\n        )\n    }\n\n    const renderDrivers = () => {\n        return journey.drivers.map((driver) => {\n            return (\n                <>\n                    <Marker\n                        key={`${driver.id}_marker`}\n                        latitude={driver.latitude}\n                        longitude={driver.longitude}\n                        offsetLeft={-10}\n                        offsetTop={-25}\n                    >\n                        <svg width=\"36px\" height=\"36px\" viewBox=\"0 0 24 24\"><path d=\"M3 18v-5a2 2 0 0 1 2-2V8a4 4 0 0 1 4-4h6a4 4 0 0 1 4 4v3a2 2 0 0 1 2 2v5a2 2 0 1 1-4 0H7a2 2 0 1 1-4 0zM9 6a2 2 0 0 0-2 2v3h10V8a2 2 0 0 0-2-2H9zm-3 9a1 1 0 1 0 0-2a1 1 0 0 0 0 2zm12 0a1 1 0 1 0 0-2a1 1 0 0 0 0 2z\" fill=\"black\" /><rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" fill=\"rgba(0, 0, 0, 0)\" /></svg>\n                    </Marker>\n                </>\n            )\n        })\n    }\n\n    return (\n        <>\n            {\n                journey.start || journey.end ?\n                    <ReactMapGL\n                        {...viewport}\n                        style={{ position: 'absolute' }}\n                        mapStyle=\"mapbox://styles/mapbox/streets-v9\"\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                        onViewportChange={nextViewport => setViewport(nextViewport)}\n                    >\n                        <div style={{ position: 'absolute', right: 0 }}>\n                            <NavigationControl />\n                        </div>\n                        {\n                            journey.directions ? renderDirections() : null\n                        }\n                        {\n                            renderMarkers()\n                        }\n                        {\n                            journey.driver ? renderDrivers() : null\n                        }\n                    </ReactMapGL>\n                    : null\n            }\n        </>\n    );\n}\n\nexport default Map;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\rideForm\\RideForm.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\landing\\styles\\styles.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\rideForm\\searchBar\\SearchBar.js",["117","118"],"import React, { useState, useContext } from 'react';\r\nimport { AutoComplete, Form, Input, Button } from 'antd';\r\nimport { FlyToInterpolator } from 'react-map-gl';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport _ from 'lodash';\r\nimport { easeCubic } from 'd3-ease';\r\n\r\nimport { MAPBOX_SEARCH_PARAMS, MAPBOX_GEOCODING_URL } from '../../../utils/constants/constants';\r\nimport JourneyContext from '../../contexts/JourneyContext';\r\n\r\nconst suffix = (\r\n  <CloseOutlined\r\n    style={{\r\n      fontSize: 16,\r\n      color: '#1890ff',\r\n    }}\r\n  />\r\n);\r\n\r\nconst SearchBar = ({ viewport, setViewport }) => {\r\n  const [journey, dispatchJourney] = useContext(JourneyContext);\r\n  const [values, setValues] = useState([]);\r\n  const [value, setValue] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const onSearch = async (searchText) => {\r\n    let cities;\r\n    if (searchText) {\r\n      const res = await fetch(`${MAPBOX_GEOCODING_URL}/${searchText}${MAPBOX_SEARCH_PARAMS}${process.env.REACT_APP_MAPBOX_TOKEN}`)\r\n      const { features } = await res.json();\r\n      cities = features.reduce((acc, curr) => [...acc, { id: curr.id, value: curr.place_name, longitude: curr.center[0], latitude: curr.center[1] }], [])\r\n\r\n      setValues(cities);\r\n    }\r\n\r\n    setOptions(\r\n      !searchText ? [] : [...cities]\r\n    );\r\n  };\r\n\r\n  const onStartSelect = (data) => {\r\n    const start = values.find(city => data === city.value)\r\n    dispatchJourney({\r\n      type: \"start\",\r\n      payload: { field: \"start\", value: start },\r\n    });\r\n    setOptions(null);\r\n    setViewport({\r\n      width: 400,\r\n      height: 400,\r\n      latitude: start.latitude,\r\n      longitude: start.longitude,\r\n      transitionDuration: 5000,\r\n      transitionInterpolator: new FlyToInterpolator(),\r\n      transitionEasing: easeCubic,\r\n      zoom: 13\r\n    })\r\n  };\r\n\r\n  const onEndSelect = (data) => {\r\n    const end = values.find(city => data === city.value)\r\n    dispatchJourney({\r\n      type: \"end\",\r\n      payload: { field: \"end\", value: end },\r\n    });\r\n    setOptions(null);\r\n    setViewport({\r\n      width: 400,\r\n      height: 400,\r\n      latitude: end.latitude,\r\n      longitude: end.longitude,\r\n      transitionDuration: 5000,\r\n      transitionInterpolator: new FlyToInterpolator(),\r\n      transitionEasing: easeCubic,\r\n      zoom: 13\r\n    })\r\n  };\r\n\r\n  const onChangeStart = (data) => {\r\n    setValue(prevState => {\r\n      return { ...prevState, start: data };\r\n    });\r\n  };\r\n\r\n  const onChangeEnd = (data) => {\r\n    setValue(prevState => {\r\n      return { ...prevState, end: data };\r\n    });\r\n  };\r\n\r\n  const clearInput = (e) => {\r\n    if (e === 'start') {\r\n      dispatchJourney({ type: \"start\", payload: { field: \"start\", value: null } })\r\n      setValue(prevState => {\r\n        console.log(prevState)\r\n        return { ...prevState, start: \"\" };\r\n      });\r\n    } else {\r\n      dispatchJourney({ type: \"end\", payload: { field: \"end\", value: null } })\r\n      setValue(prevState => {\r\n        console.log(prevState)\r\n        return { ...prevState, end: \"\" };\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Item>\r\n        <AutoComplete\r\n          value={value.start}\r\n          options={options}\r\n          style={{\r\n            width: 200,\r\n          }}\r\n          onSelect={onStartSelect}\r\n          onSearch={_.debounce(onSearch, 500)}\r\n          onChange={onChangeStart}\r\n          placeholder=\"Enter a pickup location\"\r\n          filterOption={(inputValue, option) =>\r\n            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n          }\r\n        >\r\n          <Input id=\"start\" suffix={<Button style={{ color: 'black' }} type=\"link\" onClick={() => clearInput('start')}><CloseOutlined /></Button>} />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <AutoComplete\r\n          value={value.end}\r\n          options={options}\r\n          style={{\r\n            width: 200,\r\n          }}\r\n          onSelect={onEndSelect}\r\n          onSearch={_.debounce(onSearch, 500)}\r\n          onChange={onChangeEnd}\r\n          placeholder=\"Enter destination\"\r\n          filterOption={(inputValue, option) =>\r\n            option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n          }\r\n        >\r\n          <Input suffix={<Button style={{ color: 'black' }} type=\"link\" onClick={() => clearInput('end')}><CloseOutlined /></Button>} />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\utils\\constants\\constants.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\contexts\\JourneyContext.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\directions\\Directions.js",["119"],"import React, { PureComponent } from \"react\";\r\nimport { CanvasOverlay } from \"react-map-gl\";\r\n\r\nconst Directions = ({ points }) => {\r\n\r\n  const redraw = ({ width, height, ctx, isDragging, project, unproject }) => {\r\n    const color = \"black\",\r\n      lineWidth = 3,\r\n      renderWhileDragging = true;\r\n    ctx.clearRect(0, 0, width, height);\r\n    ctx.globalCompositeOperation = \"lighter\";\r\n\r\n    if ((renderWhileDragging || !isDragging) && points) {\r\n      ctx.lineWidth = lineWidth;\r\n      ctx.strokeStyle = color;\r\n      ctx.beginPath();\r\n      points.forEach(point => {\r\n        const pixel = project([point[0], point[1]]);\r\n        ctx.lineTo(pixel[0], pixel[1]);\r\n      });\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  return <CanvasOverlay redraw={redraw} />;\r\n}\r\n\r\nexport default Directions;\r\n","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\utils\\constants\\routes.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\contexts\\ViewportContext.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\utils\\calcMidpoint.js",[],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\requestPage\\RequestPage.js",["120","121","122"],"import React, { useContext, useEffect } from 'react';\r\n\r\nimport JourneyContext from '../contexts/JourneyContext';\r\nimport ViewportContext from '../contexts/ViewportContext';\r\nimport Map from '../map/Map';\r\nimport OrderForm from './orderForm/OrderForm';\r\n\r\nconst RequestPage = () => {\r\n  const [journey, dispatchJourney] = useContext(JourneyContext);\r\n  const [viewport, setViewport] = useContext(ViewportContext);\r\n\r\n  useEffect(() => {\r\n    setViewport(prevState => {\r\n      return { ...prevState, ...{ width: '100vw', height: '100vh' } };\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: 'relative' }}>\r\n        <Map width={'100vw'} height={'100vh'} viewport={viewport} setViewport={setViewport} />\r\n        <OrderForm />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RequestPage;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\requestPage\\orderForm\\OrderForm.js",["123","124","125","126","127","128","129","130","131"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { AutoComplete, Card } from 'antd';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\n\r\nimport JourneyContext from '../../contexts/JourneyContext';\r\nimport { StyledP } from './styles/styles';\r\n\r\nconst mockVal = (str, repeat = 1) => {\r\n  return {\r\n    value: str.repeat(repeat),\r\n  };\r\n};\r\n\r\nconst OrderForm = () => {\r\n  const [journey, dispatchJourney] = useContext(JourneyContext);\r\n  const [values, setValues] = useState('');\r\n  const [editAddress, setEditAddress] = useState('');\r\n  const [value, setValue] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const onSearch = (searchText) => {\r\n    setOptions(\r\n      !searchText ? [] : [mockVal(searchText), mockVal(searchText, 2), mockVal(searchText, 3)],\r\n    );\r\n  };\r\n\r\n  const onSelect = (data) => {\r\n    console.log('onSelect', data);\r\n  };\r\n\r\n  const onChange = (data) => {\r\n    setValue(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (journey.start && journey.end) {\r\n      setValues({ start: journey.start.value.split(',')[0], end: journey.end.value.split(',')[0] })\r\n    }\r\n  }, [journey])\r\n\r\n  const onClick = (value) => {\r\n    console.log({ [value]: values[value] })\r\n    setValues(prevState => {\r\n      return { ...prevState, ...{ [value]: values[value] } }\r\n    })\r\n  }\r\n\r\n  const title = () => {\r\n    return (\r\n      <>\r\n        <StyledP onClick={() => onClick('start')}>From {values.start} <CaretDownOutlined /></StyledP>\r\n        <StyledP onClick={() => onClick('end')}>To {values.end} <CaretDownOutlined /></StyledP>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card title={title()} style={{ width: 300, position: 'absolute' }}>\r\n\r\n\r\n\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderForm;","C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\requestPage\\orderForm\\styles\\styles.js",[],["132","133"],"C:\\Users\\Jorge Gabitto\\Documents\\Jorgito\\Coding\\Code_the_Dream\\final_project\\final_project_frontend\\src\\components\\contexts\\ConnectionContext.js",["134"],"import React, { useState, useEffect } from 'react';\r\nimport actionCable from 'actioncable';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const ConnectionStore = ({ children }) => {\r\n  const [connection, setConnection] = useState(null);\r\n  const CableApp = {}\r\n  CableApp.cable = actionCable.createConsumer('ws://localhost:3000/cable');\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={[CableApp, connection, setConnection]}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default Context;",{"ruleId":"135","severity":1,"message":"136","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":30},{"ruleId":"135","severity":1,"message":"139","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":19},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"135","severity":1,"message":"144","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":18},{"ruleId":"135","severity":1,"message":"145","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":22},{"ruleId":"135","severity":1,"message":"146","line":3,"column":24,"nodeType":"137","messageId":"138","endLine":3,"endColumn":39},{"ruleId":"135","severity":1,"message":"147","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":19},{"ruleId":"135","severity":1,"message":"148","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"135","severity":1,"message":"149","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"135","severity":1,"message":"150","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":29},{"ruleId":"135","severity":1,"message":"151","line":7,"column":20,"nodeType":"137","messageId":"138","endLine":7,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":25,"column":6,"nodeType":"154","endLine":25,"endColumn":8,"suggestions":"155"},{"ruleId":"135","severity":1,"message":"156","line":3,"column":10,"nodeType":"137","messageId":"138","endLine":3,"endColumn":21},{"ruleId":"135","severity":1,"message":"157","line":4,"column":10,"nodeType":"137","messageId":"138","endLine":4,"endColumn":21},{"ruleId":"135","severity":1,"message":"158","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":9},{"ruleId":"135","severity":1,"message":"159","line":15,"column":12,"nodeType":"137","messageId":"138","endLine":15,"endColumn":21},{"ruleId":"135","severity":1,"message":"160","line":15,"column":23,"nodeType":"137","messageId":"138","endLine":15,"endColumn":35},{"ruleId":"135","severity":1,"message":"161","line":16,"column":12,"nodeType":"137","messageId":"138","endLine":16,"endColumn":27},{"ruleId":"135","severity":1,"message":"162","line":16,"column":29,"nodeType":"137","messageId":"138","endLine":16,"endColumn":47},{"ruleId":"152","severity":1,"message":"163","line":22,"column":8,"nodeType":"154","endLine":22,"endColumn":10,"suggestions":"164"},{"ruleId":"152","severity":1,"message":"165","line":75,"column":8,"nodeType":"154","endLine":75,"endColumn":36,"suggestions":"166"},{"ruleId":"135","severity":1,"message":"167","line":11,"column":7,"nodeType":"137","messageId":"138","endLine":11,"endColumn":13},{"ruleId":"135","severity":1,"message":"168","line":21,"column":10,"nodeType":"137","messageId":"138","endLine":21,"endColumn":17},{"ruleId":"135","severity":1,"message":"169","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":30},{"ruleId":"135","severity":1,"message":"168","line":9,"column":10,"nodeType":"137","messageId":"138","endLine":9,"endColumn":17},{"ruleId":"135","severity":1,"message":"170","line":9,"column":19,"nodeType":"137","messageId":"138","endLine":9,"endColumn":34},{"ruleId":"152","severity":1,"message":"171","line":16,"column":6,"nodeType":"154","endLine":16,"endColumn":8,"suggestions":"172"},{"ruleId":"135","severity":1,"message":"173","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":22},{"ruleId":"135","severity":1,"message":"170","line":15,"column":19,"nodeType":"137","messageId":"138","endLine":15,"endColumn":34},{"ruleId":"135","severity":1,"message":"174","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":21},{"ruleId":"135","severity":1,"message":"175","line":17,"column":23,"nodeType":"137","messageId":"138","endLine":17,"endColumn":37},{"ruleId":"135","severity":1,"message":"176","line":18,"column":10,"nodeType":"137","messageId":"138","endLine":18,"endColumn":15},{"ruleId":"135","severity":1,"message":"177","line":19,"column":10,"nodeType":"137","messageId":"138","endLine":19,"endColumn":17},{"ruleId":"135","severity":1,"message":"178","line":21,"column":9,"nodeType":"137","messageId":"138","endLine":21,"endColumn":17},{"ruleId":"135","severity":1,"message":"179","line":27,"column":9,"nodeType":"137","messageId":"138","endLine":27,"endColumn":17},{"ruleId":"135","severity":1,"message":"180","line":31,"column":9,"nodeType":"137","messageId":"138","endLine":31,"endColumn":17},{"ruleId":"140","replacedBy":"181"},{"ruleId":"142","replacedBy":"182"},{"ruleId":"135","severity":1,"message":"183","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'actionCable' is defined but never used.","no-native-reassign",["184"],"no-negated-in-lhs",["185"],"'Connection' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'StyledDiv' is defined but never used.","'React' is defined but never used.","'useState' is defined but never used.","'ActionCableConsumer' is defined but never used.","'connection' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'CableApp' and 'setConnection'. Either include them or remove the dependency array.","ArrayExpression",["186"],"'CarOutlined' is defined but never used.","'ActionCable' is defined but never used.","'_' is defined but never used.","'locations' is assigned a value but never used.","'setLocations' is assigned a value but never used.","'currentLocation' is assigned a value but never used.","'setCurrentLocation' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'height', 'setViewport', and 'width'. Either include them or remove the dependency array. If 'setViewport' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["187"],"React Hook useEffect has missing dependencies: 'dispatchJourney', 'journey', and 'setViewport'. Either include them or remove the dependency array. If 'setViewport' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["188"],"'suffix' is assigned a value but never used.","'journey' is assigned a value but never used.","'PureComponent' is defined but never used.","'dispatchJourney' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setViewport'. Either include it or remove the dependency array.",["189"],"'AutoComplete' is defined but never used.","'editAddress' is assigned a value but never used.","'setEditAddress' is assigned a value but never used.","'value' is assigned a value but never used.","'options' is assigned a value but never used.","'onSearch' is assigned a value but never used.","'onSelect' is assigned a value but never used.","'onChange' is assigned a value but never used.",["184"],["185"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [CableApp, setConnection]",{"range":"198","text":"199"},"Update the dependencies array to be: [height, setViewport, width]",{"range":"200","text":"201"},"Update the dependencies array to be: [journey.start, journey.end, journey, dispatchJourney, setViewport]",{"range":"202","text":"203"},"Update the dependencies array to be: [setViewport]",{"range":"204","text":"205"},[704,706],"[CableApp, setConnection]",[950,952],"[height, setViewport, width]",[2919,2947],"[journey.start, journey.end, journey, dispatchJourney, setViewport]",[555,557],"[setViewport]"]
