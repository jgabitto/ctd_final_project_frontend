[{"/home/jorge/ctd/ctd_final_project_frontend/src/index.js":"1","/home/jorge/ctd/ctd_final_project_frontend/src/components/App.js":"2","/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/Navbar.js":"3","/home/jorge/ctd/ctd_final_project_frontend/src/components/connection/Connection.js":"4","/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/styles/styles.js":"5","/home/jorge/ctd/ctd_final_project_frontend/src/components/landing/LandingPage.js":"6","/home/jorge/ctd/ctd_final_project_frontend/src/components/map/Map.js":"7"},{"size":775,"mtime":1610725357703,"results":"8","hashOfConfig":"9"},{"size":338,"mtime":1610732076470,"results":"10","hashOfConfig":"9"},{"size":1455,"mtime":1610660129277,"results":"11","hashOfConfig":"9"},{"size":1569,"mtime":1610730899168,"results":"12","hashOfConfig":"9"},{"size":1266,"mtime":1610660129277,"results":"13","hashOfConfig":"9"},{"size":761,"mtime":1610735898544,"results":"14","hashOfConfig":"9"},{"size":1130,"mtime":1610736311797,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"7hy45m",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/jorge/ctd/ctd_final_project_frontend/src/index.js",["35","36"],"import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css'\nimport actionCable from 'actioncable';\n\nimport App from './components/App';\n\n// const CableApp = {}\n\n// CableApp.cable = actionCable.createConsumer('ws://localhost:3000/cable')\n\n// export const ActionCableContext = createContext()\n\n// ReactDOM.render(<ActionCableContext.Provider value={CableApp.cable}><App /></ActionCableContext.Provider>, document.getElementById(\"root\"));\n\nimport ActionCable from 'actioncable';\nimport ActionCableProvider from 'react-actioncable-provider';\n \nconst cable = ActionCable.createConsumer('ws://localhost:3000/cable');\n\nReactDOM.render(<ActionCableProvider cable={cable}><App /></ActionCableProvider>, document.getElementById(\"root\"));",["37","38"],"/home/jorge/ctd/ctd_final_project_frontend/src/components/App.js",["39"],"import React from 'react';\n\nimport Navbar from './navbar/Navbar';\nimport LandingPage from './landing/LandingPage';\nimport Connection from './connection/Connection';\n\nconst App = ({ cableApp }) => {\n  return (\n    <>\n      <Navbar />\n      <LandingPage />\n      {/* <Connection cableApp={cableApp} /> */}\n    </>\n  )\n}\n\nexport default App;","/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/Navbar.js",["40","41"],"import React, { useState } from 'react';\nimport { Menu } from 'antd';\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\n\nimport { StyledNavbar } from './styles/styles';\n\nconst { SubMenu } = Menu;\n\nconst Navbar = () => {\n  const [state, setState] = useState({\n    current: 'landing',\n  })\n  const { current } = state;\n\n  const handleClick = e => {\n    console.log('click ', e);\n    setState({ current: e.key });\n  };\n\n  return (\n    <StyledNavbar>\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{\n        borderBottom: \"none\"\n      }}>\n        <Menu.Item id=\"icon\" key=\"landing\">\n          RideShare\n        </Menu.Item>\n      </Menu>\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\" style={{\n        borderBottom: \"none\"\n      }}>\n        <Menu.Item className=\"menuItem\" key=\"about\">\n          About\n        </Menu.Item>\n        <SubMenu className=\"menuItem\" key=\"SubMenu\" title=\"Navigation Three - Submenu\">\n          <Menu.ItemGroup title=\"Item 1\">\n            <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n            <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n          </Menu.ItemGroup>\n          <Menu.ItemGroup title=\"Item 2\">\n            <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n            <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n          </Menu.ItemGroup>\n        </SubMenu>\n      </Menu >\n    </StyledNavbar>\n  );\n}\n\nexport default Navbar;","/home/jorge/ctd/ctd_final_project_frontend/src/components/connection/Connection.js",["42","43","44","45"],"import React, { useState, useEffect, useContext } from 'react';\nimport { ActionCableConsumer } from 'react-actioncable-provider';\n\n// import { ActionCableContext } from '../../index'\n\n\nconst Connection = ({ cableApp }) => {\n  // const cable = useContext(ActionCableContext)\n  const [channel, setChannel] = useState(null)\n\n  const handleConnected = (message) => {\n    console.log('connected')\n  }\n\n  const handleReceived = (message) => {\n    console.log(message)\n  }\n\n  return (\n    <ActionCableConsumer\n        channel={{channel: \"RoomChannel\", user: {id: 5}}}\n        onConnected={handleConnected}\n        onReceived={handleReceived}\n      >\n    <div>\n      {}\n    </div>\n    </ActionCableConsumer>\n  )\n\n  // useEffect(() => {\n  //   console.log(cable)\n  //   const channel = cable.subscriptions.create({\n  //     channel: \"RoomChannel\",\n  //     id: 4\n  //   });\n  //   console.log(channel)\n  //   setChannel(channel)\n  //   return () => {\n  //     channel.unsubscribe()\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   console.log(cableApp)\n  //   cableApp.room = cableApp.cable.subscriptions.create(\n  //   {\n  //     channel: \"RoomChannel\",\n  //     id: 4\n  //   },\n  //   {\n  //     connected() {\n  //       console.log(\"we're connected\")\n  //   }},\n  //   {\n  //     disconnected() {\n  //       console.log(\"we're disconnected\")\n  //   }},\n  //   {\n  //     received(data) {\n  //       console.log('hello')\n  //       console.log(data)\n  //     }\n  //   })\n  // }, [])\n\n  // return (\n  //   <div>\n  //     {}\n  //   </div>\n  // )\n}\n\nexport default Connection;","/home/jorge/ctd/ctd_final_project_frontend/src/components/navbar/styles/styles.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/landing/LandingPage.js",[],"/home/jorge/ctd/ctd_final_project_frontend/src/components/map/Map.js",["46"],{"ruleId":"47","severity":1,"message":"48","line":1,"column":17,"nodeType":"49","messageId":"50","endLine":1,"endColumn":30},{"ruleId":"47","severity":1,"message":"51","line":4,"column":8,"nodeType":"49","messageId":"50","endLine":4,"endColumn":19},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"47","severity":1,"message":"56","line":5,"column":8,"nodeType":"49","messageId":"50","endLine":5,"endColumn":18},{"ruleId":"47","severity":1,"message":"57","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":22},{"ruleId":"47","severity":1,"message":"58","line":3,"column":24,"nodeType":"49","messageId":"50","endLine":3,"endColumn":39},{"ruleId":"47","severity":1,"message":"59","line":1,"column":27,"nodeType":"49","messageId":"50","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"60","line":1,"column":38,"nodeType":"49","messageId":"50","endLine":1,"endColumn":48},{"ruleId":"47","severity":1,"message":"61","line":9,"column":10,"nodeType":"49","messageId":"50","endLine":9,"endColumn":17},{"ruleId":"47","severity":1,"message":"62","line":9,"column":19,"nodeType":"49","messageId":"50","endLine":9,"endColumn":29},{"ruleId":"63","severity":1,"message":"64","line":29,"column":8,"nodeType":"65","endLine":29,"endColumn":10,"suggestions":"66"},"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'actionCable' is defined but never used.","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'Connection' is defined but never used.","'MailOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'channel' is assigned a value but never used.","'setChannel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'state.lat', 'state.lng', and 'state.zoom'. Either include them or remove the dependency array.","ArrayExpression",["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [state.lat, state.lng, state.zoom]",{"range":"72","text":"73"},[798,800],"[state.lat, state.lng, state.zoom]"]